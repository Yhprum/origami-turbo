/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthedImport } from './routes/_unauthed'
import { Route as AuthedImport } from './routes/_authed'
import { Route as AuthedIndexImport } from './routes/_authed/index'
import { Route as UnauthedRegisterImport } from './routes/_unauthed/register'
import { Route as UnauthedLoginImport } from './routes/_unauthed/login'
import { Route as AuthedSupportImport } from './routes/_authed/support'
import { Route as AuthedProfileImport } from './routes/_authed/profile'
import { Route as AuthedOrdersImport } from './routes/_authed/orders'
import { Route as AuthedChartsImport } from './routes/_authed/charts'
import { Route as AuthedProfileIndexImport } from './routes/_authed/profile/index'
import { Route as AuthedProfileTagsImport } from './routes/_authed/profile/tags'
import { Route as AuthedProfileSecurityImport } from './routes/_authed/profile/security'
import { Route as AuthedProfileConnectionsImport } from './routes/_authed/profile/connections'
import { Route as AuthedIdeasStocksImport } from './routes/_authed/ideas/stocks'
import { Route as AuthedIdeasPreferredStocksImport } from './routes/_authed/ideas/preferred-stocks'
import { Route as AuthedIdeasOptionsImport } from './routes/_authed/ideas/options'
import { Route as AuthedIdeasBondsImport } from './routes/_authed/ideas/bonds'
import { Route as AuthedHoldingsStocksImport } from './routes/_authed/holdings/stocks'
import { Route as AuthedHoldingsLabelImport } from './routes/_authed/holdings/label'
import { Route as AuthedHoldingsClosedImport } from './routes/_authed/holdings/closed'
import { Route as AuthedHoldingsAddImport } from './routes/_authed/holdings/add'
import { Route as AuthedHoldingsOptionsIndexImport } from './routes/_authed/holdings/options.index'
import { Route as AuthedHoldingsOptionsClosedImport } from './routes/_authed/holdings/options.closed'
import { Route as AuthedHoldingsOptionsAddImport } from './routes/_authed/holdings/options.add'

// Create/Update Routes

const UnauthedRoute = UnauthedImport.update({
  id: '/_unauthed',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const AuthedIndexRoute = AuthedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)

const UnauthedRegisterRoute = UnauthedRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => UnauthedRoute,
} as any)

const UnauthedLoginRoute = UnauthedLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthedRoute,
} as any)

const AuthedSupportRoute = AuthedSupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedProfileRoute = AuthedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedOrdersRoute = AuthedOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedChartsRoute = AuthedChartsImport.update({
  id: '/charts',
  path: '/charts',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedProfileIndexRoute = AuthedProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedProfileRoute,
} as any)

const AuthedProfileTagsRoute = AuthedProfileTagsImport.update({
  id: '/tags',
  path: '/tags',
  getParentRoute: () => AuthedProfileRoute,
} as any)

const AuthedProfileSecurityRoute = AuthedProfileSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AuthedProfileRoute,
} as any)

const AuthedProfileConnectionsRoute = AuthedProfileConnectionsImport.update({
  id: '/connections',
  path: '/connections',
  getParentRoute: () => AuthedProfileRoute,
} as any)

const AuthedIdeasStocksRoute = AuthedIdeasStocksImport.update({
  id: '/ideas/stocks',
  path: '/ideas/stocks',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedIdeasPreferredStocksRoute = AuthedIdeasPreferredStocksImport.update(
  {
    id: '/ideas/preferred-stocks',
    path: '/ideas/preferred-stocks',
    getParentRoute: () => AuthedRoute,
  } as any,
)

const AuthedIdeasOptionsRoute = AuthedIdeasOptionsImport.update({
  id: '/ideas/options',
  path: '/ideas/options',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedIdeasBondsRoute = AuthedIdeasBondsImport.update({
  id: '/ideas/bonds',
  path: '/ideas/bonds',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedHoldingsStocksRoute = AuthedHoldingsStocksImport.update({
  id: '/holdings/stocks',
  path: '/holdings/stocks',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedHoldingsLabelRoute = AuthedHoldingsLabelImport.update({
  id: '/holdings/label',
  path: '/holdings/label',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedHoldingsClosedRoute = AuthedHoldingsClosedImport.update({
  id: '/holdings/closed',
  path: '/holdings/closed',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedHoldingsAddRoute = AuthedHoldingsAddImport.update({
  id: '/holdings/add',
  path: '/holdings/add',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedHoldingsOptionsIndexRoute = AuthedHoldingsOptionsIndexImport.update(
  {
    id: '/holdings/options/',
    path: '/holdings/options/',
    getParentRoute: () => AuthedRoute,
  } as any,
)

const AuthedHoldingsOptionsClosedRoute =
  AuthedHoldingsOptionsClosedImport.update({
    id: '/holdings/options/closed',
    path: '/holdings/options/closed',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedHoldingsOptionsAddRoute = AuthedHoldingsOptionsAddImport.update({
  id: '/holdings/options/add',
  path: '/holdings/options/add',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthed': {
      id: '/_unauthed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/charts': {
      id: '/_authed/charts'
      path: '/charts'
      fullPath: '/charts'
      preLoaderRoute: typeof AuthedChartsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/orders': {
      id: '/_authed/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthedOrdersImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/support': {
      id: '/_authed/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AuthedSupportImport
      parentRoute: typeof AuthedImport
    }
    '/_unauthed/login': {
      id: '/_unauthed/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthedLoginImport
      parentRoute: typeof UnauthedImport
    }
    '/_unauthed/register': {
      id: '/_unauthed/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof UnauthedRegisterImport
      parentRoute: typeof UnauthedImport
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/add': {
      id: '/_authed/holdings/add'
      path: '/holdings/add'
      fullPath: '/holdings/add'
      preLoaderRoute: typeof AuthedHoldingsAddImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/closed': {
      id: '/_authed/holdings/closed'
      path: '/holdings/closed'
      fullPath: '/holdings/closed'
      preLoaderRoute: typeof AuthedHoldingsClosedImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/label': {
      id: '/_authed/holdings/label'
      path: '/holdings/label'
      fullPath: '/holdings/label'
      preLoaderRoute: typeof AuthedHoldingsLabelImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/stocks': {
      id: '/_authed/holdings/stocks'
      path: '/holdings/stocks'
      fullPath: '/holdings/stocks'
      preLoaderRoute: typeof AuthedHoldingsStocksImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/ideas/bonds': {
      id: '/_authed/ideas/bonds'
      path: '/ideas/bonds'
      fullPath: '/ideas/bonds'
      preLoaderRoute: typeof AuthedIdeasBondsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/ideas/options': {
      id: '/_authed/ideas/options'
      path: '/ideas/options'
      fullPath: '/ideas/options'
      preLoaderRoute: typeof AuthedIdeasOptionsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/ideas/preferred-stocks': {
      id: '/_authed/ideas/preferred-stocks'
      path: '/ideas/preferred-stocks'
      fullPath: '/ideas/preferred-stocks'
      preLoaderRoute: typeof AuthedIdeasPreferredStocksImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/ideas/stocks': {
      id: '/_authed/ideas/stocks'
      path: '/ideas/stocks'
      fullPath: '/ideas/stocks'
      preLoaderRoute: typeof AuthedIdeasStocksImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/profile/connections': {
      id: '/_authed/profile/connections'
      path: '/connections'
      fullPath: '/profile/connections'
      preLoaderRoute: typeof AuthedProfileConnectionsImport
      parentRoute: typeof AuthedProfileImport
    }
    '/_authed/profile/security': {
      id: '/_authed/profile/security'
      path: '/security'
      fullPath: '/profile/security'
      preLoaderRoute: typeof AuthedProfileSecurityImport
      parentRoute: typeof AuthedProfileImport
    }
    '/_authed/profile/tags': {
      id: '/_authed/profile/tags'
      path: '/tags'
      fullPath: '/profile/tags'
      preLoaderRoute: typeof AuthedProfileTagsImport
      parentRoute: typeof AuthedProfileImport
    }
    '/_authed/profile/': {
      id: '/_authed/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof AuthedProfileIndexImport
      parentRoute: typeof AuthedProfileImport
    }
    '/_authed/holdings/options/add': {
      id: '/_authed/holdings/options/add'
      path: '/holdings/options/add'
      fullPath: '/holdings/options/add'
      preLoaderRoute: typeof AuthedHoldingsOptionsAddImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/options/closed': {
      id: '/_authed/holdings/options/closed'
      path: '/holdings/options/closed'
      fullPath: '/holdings/options/closed'
      preLoaderRoute: typeof AuthedHoldingsOptionsClosedImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/holdings/options/': {
      id: '/_authed/holdings/options/'
      path: '/holdings/options'
      fullPath: '/holdings/options'
      preLoaderRoute: typeof AuthedHoldingsOptionsIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedProfileRouteChildren {
  AuthedProfileConnectionsRoute: typeof AuthedProfileConnectionsRoute
  AuthedProfileSecurityRoute: typeof AuthedProfileSecurityRoute
  AuthedProfileTagsRoute: typeof AuthedProfileTagsRoute
  AuthedProfileIndexRoute: typeof AuthedProfileIndexRoute
}

const AuthedProfileRouteChildren: AuthedProfileRouteChildren = {
  AuthedProfileConnectionsRoute: AuthedProfileConnectionsRoute,
  AuthedProfileSecurityRoute: AuthedProfileSecurityRoute,
  AuthedProfileTagsRoute: AuthedProfileTagsRoute,
  AuthedProfileIndexRoute: AuthedProfileIndexRoute,
}

const AuthedProfileRouteWithChildren = AuthedProfileRoute._addFileChildren(
  AuthedProfileRouteChildren,
)

interface AuthedRouteChildren {
  AuthedChartsRoute: typeof AuthedChartsRoute
  AuthedOrdersRoute: typeof AuthedOrdersRoute
  AuthedProfileRoute: typeof AuthedProfileRouteWithChildren
  AuthedSupportRoute: typeof AuthedSupportRoute
  AuthedIndexRoute: typeof AuthedIndexRoute
  AuthedHoldingsAddRoute: typeof AuthedHoldingsAddRoute
  AuthedHoldingsClosedRoute: typeof AuthedHoldingsClosedRoute
  AuthedHoldingsLabelRoute: typeof AuthedHoldingsLabelRoute
  AuthedHoldingsStocksRoute: typeof AuthedHoldingsStocksRoute
  AuthedIdeasBondsRoute: typeof AuthedIdeasBondsRoute
  AuthedIdeasOptionsRoute: typeof AuthedIdeasOptionsRoute
  AuthedIdeasPreferredStocksRoute: typeof AuthedIdeasPreferredStocksRoute
  AuthedIdeasStocksRoute: typeof AuthedIdeasStocksRoute
  AuthedHoldingsOptionsAddRoute: typeof AuthedHoldingsOptionsAddRoute
  AuthedHoldingsOptionsClosedRoute: typeof AuthedHoldingsOptionsClosedRoute
  AuthedHoldingsOptionsIndexRoute: typeof AuthedHoldingsOptionsIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedChartsRoute: AuthedChartsRoute,
  AuthedOrdersRoute: AuthedOrdersRoute,
  AuthedProfileRoute: AuthedProfileRouteWithChildren,
  AuthedSupportRoute: AuthedSupportRoute,
  AuthedIndexRoute: AuthedIndexRoute,
  AuthedHoldingsAddRoute: AuthedHoldingsAddRoute,
  AuthedHoldingsClosedRoute: AuthedHoldingsClosedRoute,
  AuthedHoldingsLabelRoute: AuthedHoldingsLabelRoute,
  AuthedHoldingsStocksRoute: AuthedHoldingsStocksRoute,
  AuthedIdeasBondsRoute: AuthedIdeasBondsRoute,
  AuthedIdeasOptionsRoute: AuthedIdeasOptionsRoute,
  AuthedIdeasPreferredStocksRoute: AuthedIdeasPreferredStocksRoute,
  AuthedIdeasStocksRoute: AuthedIdeasStocksRoute,
  AuthedHoldingsOptionsAddRoute: AuthedHoldingsOptionsAddRoute,
  AuthedHoldingsOptionsClosedRoute: AuthedHoldingsOptionsClosedRoute,
  AuthedHoldingsOptionsIndexRoute: AuthedHoldingsOptionsIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface UnauthedRouteChildren {
  UnauthedLoginRoute: typeof UnauthedLoginRoute
  UnauthedRegisterRoute: typeof UnauthedRegisterRoute
}

const UnauthedRouteChildren: UnauthedRouteChildren = {
  UnauthedLoginRoute: UnauthedLoginRoute,
  UnauthedRegisterRoute: UnauthedRegisterRoute,
}

const UnauthedRouteWithChildren = UnauthedRoute._addFileChildren(
  UnauthedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof UnauthedRouteWithChildren
  '/charts': typeof AuthedChartsRoute
  '/orders': typeof AuthedOrdersRoute
  '/profile': typeof AuthedProfileRouteWithChildren
  '/support': typeof AuthedSupportRoute
  '/login': typeof UnauthedLoginRoute
  '/register': typeof UnauthedRegisterRoute
  '/': typeof AuthedIndexRoute
  '/holdings/add': typeof AuthedHoldingsAddRoute
  '/holdings/closed': typeof AuthedHoldingsClosedRoute
  '/holdings/label': typeof AuthedHoldingsLabelRoute
  '/holdings/stocks': typeof AuthedHoldingsStocksRoute
  '/ideas/bonds': typeof AuthedIdeasBondsRoute
  '/ideas/options': typeof AuthedIdeasOptionsRoute
  '/ideas/preferred-stocks': typeof AuthedIdeasPreferredStocksRoute
  '/ideas/stocks': typeof AuthedIdeasStocksRoute
  '/profile/connections': typeof AuthedProfileConnectionsRoute
  '/profile/security': typeof AuthedProfileSecurityRoute
  '/profile/tags': typeof AuthedProfileTagsRoute
  '/profile/': typeof AuthedProfileIndexRoute
  '/holdings/options/add': typeof AuthedHoldingsOptionsAddRoute
  '/holdings/options/closed': typeof AuthedHoldingsOptionsClosedRoute
  '/holdings/options': typeof AuthedHoldingsOptionsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof UnauthedRouteWithChildren
  '/charts': typeof AuthedChartsRoute
  '/orders': typeof AuthedOrdersRoute
  '/support': typeof AuthedSupportRoute
  '/login': typeof UnauthedLoginRoute
  '/register': typeof UnauthedRegisterRoute
  '/': typeof AuthedIndexRoute
  '/holdings/add': typeof AuthedHoldingsAddRoute
  '/holdings/closed': typeof AuthedHoldingsClosedRoute
  '/holdings/label': typeof AuthedHoldingsLabelRoute
  '/holdings/stocks': typeof AuthedHoldingsStocksRoute
  '/ideas/bonds': typeof AuthedIdeasBondsRoute
  '/ideas/options': typeof AuthedIdeasOptionsRoute
  '/ideas/preferred-stocks': typeof AuthedIdeasPreferredStocksRoute
  '/ideas/stocks': typeof AuthedIdeasStocksRoute
  '/profile/connections': typeof AuthedProfileConnectionsRoute
  '/profile/security': typeof AuthedProfileSecurityRoute
  '/profile/tags': typeof AuthedProfileTagsRoute
  '/profile': typeof AuthedProfileIndexRoute
  '/holdings/options/add': typeof AuthedHoldingsOptionsAddRoute
  '/holdings/options/closed': typeof AuthedHoldingsOptionsClosedRoute
  '/holdings/options': typeof AuthedHoldingsOptionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_unauthed': typeof UnauthedRouteWithChildren
  '/_authed/charts': typeof AuthedChartsRoute
  '/_authed/orders': typeof AuthedOrdersRoute
  '/_authed/profile': typeof AuthedProfileRouteWithChildren
  '/_authed/support': typeof AuthedSupportRoute
  '/_unauthed/login': typeof UnauthedLoginRoute
  '/_unauthed/register': typeof UnauthedRegisterRoute
  '/_authed/': typeof AuthedIndexRoute
  '/_authed/holdings/add': typeof AuthedHoldingsAddRoute
  '/_authed/holdings/closed': typeof AuthedHoldingsClosedRoute
  '/_authed/holdings/label': typeof AuthedHoldingsLabelRoute
  '/_authed/holdings/stocks': typeof AuthedHoldingsStocksRoute
  '/_authed/ideas/bonds': typeof AuthedIdeasBondsRoute
  '/_authed/ideas/options': typeof AuthedIdeasOptionsRoute
  '/_authed/ideas/preferred-stocks': typeof AuthedIdeasPreferredStocksRoute
  '/_authed/ideas/stocks': typeof AuthedIdeasStocksRoute
  '/_authed/profile/connections': typeof AuthedProfileConnectionsRoute
  '/_authed/profile/security': typeof AuthedProfileSecurityRoute
  '/_authed/profile/tags': typeof AuthedProfileTagsRoute
  '/_authed/profile/': typeof AuthedProfileIndexRoute
  '/_authed/holdings/options/add': typeof AuthedHoldingsOptionsAddRoute
  '/_authed/holdings/options/closed': typeof AuthedHoldingsOptionsClosedRoute
  '/_authed/holdings/options/': typeof AuthedHoldingsOptionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/charts'
    | '/orders'
    | '/profile'
    | '/support'
    | '/login'
    | '/register'
    | '/'
    | '/holdings/add'
    | '/holdings/closed'
    | '/holdings/label'
    | '/holdings/stocks'
    | '/ideas/bonds'
    | '/ideas/options'
    | '/ideas/preferred-stocks'
    | '/ideas/stocks'
    | '/profile/connections'
    | '/profile/security'
    | '/profile/tags'
    | '/profile/'
    | '/holdings/options/add'
    | '/holdings/options/closed'
    | '/holdings/options'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/charts'
    | '/orders'
    | '/support'
    | '/login'
    | '/register'
    | '/'
    | '/holdings/add'
    | '/holdings/closed'
    | '/holdings/label'
    | '/holdings/stocks'
    | '/ideas/bonds'
    | '/ideas/options'
    | '/ideas/preferred-stocks'
    | '/ideas/stocks'
    | '/profile/connections'
    | '/profile/security'
    | '/profile/tags'
    | '/profile'
    | '/holdings/options/add'
    | '/holdings/options/closed'
    | '/holdings/options'
  id:
    | '__root__'
    | '/_authed'
    | '/_unauthed'
    | '/_authed/charts'
    | '/_authed/orders'
    | '/_authed/profile'
    | '/_authed/support'
    | '/_unauthed/login'
    | '/_unauthed/register'
    | '/_authed/'
    | '/_authed/holdings/add'
    | '/_authed/holdings/closed'
    | '/_authed/holdings/label'
    | '/_authed/holdings/stocks'
    | '/_authed/ideas/bonds'
    | '/_authed/ideas/options'
    | '/_authed/ideas/preferred-stocks'
    | '/_authed/ideas/stocks'
    | '/_authed/profile/connections'
    | '/_authed/profile/security'
    | '/_authed/profile/tags'
    | '/_authed/profile/'
    | '/_authed/holdings/options/add'
    | '/_authed/holdings/options/closed'
    | '/_authed/holdings/options/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  UnauthedRoute: typeof UnauthedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  UnauthedRoute: UnauthedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed",
        "/_unauthed"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/charts",
        "/_authed/orders",
        "/_authed/profile",
        "/_authed/support",
        "/_authed/",
        "/_authed/holdings/add",
        "/_authed/holdings/closed",
        "/_authed/holdings/label",
        "/_authed/holdings/stocks",
        "/_authed/ideas/bonds",
        "/_authed/ideas/options",
        "/_authed/ideas/preferred-stocks",
        "/_authed/ideas/stocks",
        "/_authed/holdings/options/add",
        "/_authed/holdings/options/closed",
        "/_authed/holdings/options/"
      ]
    },
    "/_unauthed": {
      "filePath": "_unauthed.tsx",
      "children": [
        "/_unauthed/login",
        "/_unauthed/register"
      ]
    },
    "/_authed/charts": {
      "filePath": "_authed/charts.tsx",
      "parent": "/_authed"
    },
    "/_authed/orders": {
      "filePath": "_authed/orders.tsx",
      "parent": "/_authed"
    },
    "/_authed/profile": {
      "filePath": "_authed/profile.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/profile/connections",
        "/_authed/profile/security",
        "/_authed/profile/tags",
        "/_authed/profile/"
      ]
    },
    "/_authed/support": {
      "filePath": "_authed/support.tsx",
      "parent": "/_authed"
    },
    "/_unauthed/login": {
      "filePath": "_unauthed/login.tsx",
      "parent": "/_unauthed"
    },
    "/_unauthed/register": {
      "filePath": "_unauthed/register.tsx",
      "parent": "/_unauthed"
    },
    "/_authed/": {
      "filePath": "_authed/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/add": {
      "filePath": "_authed/holdings/add.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/closed": {
      "filePath": "_authed/holdings/closed.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/label": {
      "filePath": "_authed/holdings/label.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/stocks": {
      "filePath": "_authed/holdings/stocks.tsx",
      "parent": "/_authed"
    },
    "/_authed/ideas/bonds": {
      "filePath": "_authed/ideas/bonds.tsx",
      "parent": "/_authed"
    },
    "/_authed/ideas/options": {
      "filePath": "_authed/ideas/options.tsx",
      "parent": "/_authed"
    },
    "/_authed/ideas/preferred-stocks": {
      "filePath": "_authed/ideas/preferred-stocks.tsx",
      "parent": "/_authed"
    },
    "/_authed/ideas/stocks": {
      "filePath": "_authed/ideas/stocks.tsx",
      "parent": "/_authed"
    },
    "/_authed/profile/connections": {
      "filePath": "_authed/profile/connections.tsx",
      "parent": "/_authed/profile"
    },
    "/_authed/profile/security": {
      "filePath": "_authed/profile/security.tsx",
      "parent": "/_authed/profile"
    },
    "/_authed/profile/tags": {
      "filePath": "_authed/profile/tags.tsx",
      "parent": "/_authed/profile"
    },
    "/_authed/profile/": {
      "filePath": "_authed/profile/index.tsx",
      "parent": "/_authed/profile"
    },
    "/_authed/holdings/options/add": {
      "filePath": "_authed/holdings/options.add.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/options/closed": {
      "filePath": "_authed/holdings/options.closed.tsx",
      "parent": "/_authed"
    },
    "/_authed/holdings/options/": {
      "filePath": "_authed/holdings/options.index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
